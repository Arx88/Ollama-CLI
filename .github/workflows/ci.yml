# .github/workflows/ci.yml

name: Gemini CLI CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: Build and Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read # For checkout
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run formatter check
        run: |
          npm run format
          git diff --exit-code

      - name: Run linter
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Run type check
        run: npm run typecheck

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts-${{ matrix.node-version }}
          path: |
            packages/*/dist
            package-lock.json # Only upload dist and lockfile

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job
    permissions:
      contents: read
      checks: write
      pull-requests: write
    strategy:
      matrix:
        node-version: [20.x] # Should match the build job's matrix
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ matrix.node-version }}
          path: . # Download to the root, this will include package-lock.json and packages/*/dist

      # Restore/create package structure for dist folders if necessary.
      # The download-artifact action with path: . should place them correctly if the
      # upload paths were relative to the workspace root.
      # Example: if uploaded `packages/cli/dist`, it will be at `./packages/cli/dist`.

      - name: Install dependencies for testing
        run: npm ci # Install fresh dependencies using the downloaded package-lock.json

      - name: Run tests and generate reports
        run: npm run test:ci

      - name: Publish Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Test Results (Node ${{ matrix.node-version }})
          path: packages/*/junit.xml # Glob pattern for JUnit files
          reporter: java-junit
          fail-on-error: 'false'

      - name: Prepare Coverage Comment
        id: prep_coverage_comment
        shell: bash
        run: |
          cli_summary_content=$(NO_COLOR=true npm run test:ci --workspace=@gemini-code/cli | awk '/^ % Coverage report from v8/,/^-+$/')
          server_summary_content=$(NO_COLOR=true npm run test:ci --workspace=@gemini-code/server | awk '/^ % Coverage report from v8/,/^-+$/')
          comment_file="coverage-comment.md"

          echo "## Code Coverage Summary" > "$comment_file"
          echo "" >> "$comment_file"

          # CLI Package - Collapsible Section
          echo "<details>" >> "$comment_file"
          echo "<summary>CLI Package Coverage Details</summary>" >> "$comment_file"
          echo "" >> "$comment_file" # Add a blank line for better rendering before the code block
          echo '```text' >> "$comment_file"
          echo "$cli_summary_content" >> "$comment_file"
          echo '```' >> "$comment_file"
          echo "</details>" >> "$comment_file"
          echo "" >> "$comment_file" # Add a blank line after the details block

          # Server Package - Collapsible Section
          echo "<details>" >> "$comment_file"
          echo "<summary>Server Package Coverage Details</summary>" >> "$comment_file"
          echo "" >> "$comment_file" # Add a blank line for better rendering before the code block
          echo '```text' >> "$comment_file"
          echo "$server_summary_content" >> "$comment_file"
          echo '```' >> "$comment_file"
          echo "</details>" >> "$comment_file"
          echo "" >> "$comment_file" # Add a blank line after the details block

          echo "_For detailed HTML reports, please see the 'coverage-reports-${{ matrix.node-version }}' artifact from this CI run._" >> "$comment_file"

          echo "comment_body<<EOF" >> "$GITHUB_OUTPUT"
          cat "$comment_file" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Post Coverage Comment
        uses: thollander/actions-comment-pull-request@v3
        if: always()
        with:
          message: ${{ steps.prep_coverage_comment.outputs.comment_body }}
          comment_tag: code-coverage-summary # This input is valid
          github-token: ${{ secrets.GITHUB_TOKEN }} # Corrected: lowercase 'github-token'

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports-${{ matrix.node-version }}
          path: packages/*/coverage
